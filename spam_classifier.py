# -*- coding: utf-8 -*-
"""spam_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10QspDjF7TPP-0l08LABI-PyjUMeB66Qt
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

msg = pd.read_csv('drive/My Drive/SMSSpamCollection',sep='\t', names=['label','message'])

msg

import re
import nltk
nltk.download('stopwords')
nltk.download('wordnet')

#data cleaning and preprocessing
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from nltk.stem import WordNetLemmatizer

stemmer = PorterStemmer()
lemmatizer = WordNetLemmatizer()
corpus = []
for i in range(len(msg)):
  review = re.sub('[^a-zA-Z]',' ',msg['message'][i])
  review = review.lower()
  review = review.split()
  review = [lemmatizer.lemmatize(word) for word in review if not word in stopwords.words('english')]
  review = ' '.join(review)
  corpus.append(review)

corpus

#creating bag of words
from sklearn.feature_extraction.text import TfidfVectorizer

cv = TfidfVectorizer(max_features=5000)
X = cv.fit_transform(corpus).toarray()

X

X.shape

y = pd.get_dummies(msg['label'])

y

y = y.iloc[ :, 1].values

y

X.shape

y.shape

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.20)

#training model using naive bayes classifier
from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB().fit(X_train,y_train)

y_pred = model.predict(X_test)

y_pred

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)

cm

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test,y_pred)

accuracy * 100